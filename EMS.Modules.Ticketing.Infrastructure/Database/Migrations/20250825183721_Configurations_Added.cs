// <auto-generated/>
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace EMS.Modules.Ticketing.Infrastructure.Database.Migrations
{
    /// <inheritdoc />
    public partial class Configurations_Added : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<string>(
                name: "code",
                schema: "ticketing",
                table: "tickets",
                type: "character varying(30)",
                maxLength: 30,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "text");

            migrationBuilder.CreateIndex(
                name: "ix_tickets_code",
                schema: "ticketing",
                table: "tickets",
                column: "code",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_tickets_customer_id",
                schema: "ticketing",
                table: "tickets",
                column: "customer_id");

            migrationBuilder.CreateIndex(
                name: "ix_tickets_order_id",
                schema: "ticketing",
                table: "tickets",
                column: "order_id");

            migrationBuilder.CreateIndex(
                name: "ix_tickets_ticket_type_id",
                schema: "ticketing",
                table: "tickets",
                column: "ticket_type_id");

            migrationBuilder.CreateIndex(
                name: "ix_ticket_types_event_id",
                schema: "ticketing",
                table: "ticket_types",
                column: "event_id");

            migrationBuilder.CreateIndex(
                name: "ix_payments_order_id",
                schema: "ticketing",
                table: "payments",
                column: "order_id");

            migrationBuilder.CreateIndex(
                name: "ix_payments_transaction_id",
                schema: "ticketing",
                table: "payments",
                column: "transaction_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_orders_customer_id",
                schema: "ticketing",
                table: "orders",
                column: "customer_id");

            migrationBuilder.CreateIndex(
                name: "ix_order_items_ticket_type_id",
                schema: "ticketing",
                table: "order_items",
                column: "ticket_type_id");

            migrationBuilder.AddForeignKey(
                name: "fk_order_items_ticket_types_ticket_type_id",
                schema: "ticketing",
                table: "order_items",
                column: "ticket_type_id",
                principalSchema: "ticketing",
                principalTable: "ticket_types",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_orders_customers_customer_id",
                schema: "ticketing",
                table: "orders",
                column: "customer_id",
                principalSchema: "ticketing",
                principalTable: "customers",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_payments_orders_order_id",
                schema: "ticketing",
                table: "payments",
                column: "order_id",
                principalSchema: "ticketing",
                principalTable: "orders",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_ticket_types_events_event_id",
                schema: "ticketing",
                table: "ticket_types",
                column: "event_id",
                principalSchema: "ticketing",
                principalTable: "events",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_tickets_customers_customer_id",
                schema: "ticketing",
                table: "tickets",
                column: "customer_id",
                principalSchema: "ticketing",
                principalTable: "customers",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_tickets_events_ticket_type_id",
                schema: "ticketing",
                table: "tickets",
                column: "ticket_type_id",
                principalSchema: "ticketing",
                principalTable: "events",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_tickets_orders_order_id",
                schema: "ticketing",
                table: "tickets",
                column: "order_id",
                principalSchema: "ticketing",
                principalTable: "orders",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);

            migrationBuilder.AddForeignKey(
                name: "fk_tickets_ticket_types_ticket_type_id",
                schema: "ticketing",
                table: "tickets",
                column: "ticket_type_id",
                principalSchema: "ticketing",
                principalTable: "ticket_types",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "fk_order_items_ticket_types_ticket_type_id",
                schema: "ticketing",
                table: "order_items");

            migrationBuilder.DropForeignKey(
                name: "fk_orders_customers_customer_id",
                schema: "ticketing",
                table: "orders");

            migrationBuilder.DropForeignKey(
                name: "fk_payments_orders_order_id",
                schema: "ticketing",
                table: "payments");

            migrationBuilder.DropForeignKey(
                name: "fk_ticket_types_events_event_id",
                schema: "ticketing",
                table: "ticket_types");

            migrationBuilder.DropForeignKey(
                name: "fk_tickets_customers_customer_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropForeignKey(
                name: "fk_tickets_events_ticket_type_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropForeignKey(
                name: "fk_tickets_orders_order_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropForeignKey(
                name: "fk_tickets_ticket_types_ticket_type_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropIndex(
                name: "ix_tickets_code",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropIndex(
                name: "ix_tickets_customer_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropIndex(
                name: "ix_tickets_order_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropIndex(
                name: "ix_tickets_ticket_type_id",
                schema: "ticketing",
                table: "tickets");

            migrationBuilder.DropIndex(
                name: "ix_ticket_types_event_id",
                schema: "ticketing",
                table: "ticket_types");

            migrationBuilder.DropIndex(
                name: "ix_payments_order_id",
                schema: "ticketing",
                table: "payments");

            migrationBuilder.DropIndex(
                name: "ix_payments_transaction_id",
                schema: "ticketing",
                table: "payments");

            migrationBuilder.DropIndex(
                name: "ix_orders_customer_id",
                schema: "ticketing",
                table: "orders");

            migrationBuilder.DropIndex(
                name: "ix_order_items_ticket_type_id",
                schema: "ticketing",
                table: "order_items");

            migrationBuilder.AlterColumn<string>(
                name: "code",
                schema: "ticketing",
                table: "tickets",
                type: "text",
                nullable: false,
                oldClrType: typeof(string),
                oldType: "character varying(30)",
                oldMaxLength: 30);
        }
    }
}
